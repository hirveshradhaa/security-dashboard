import { DataGrid, GridColDef } from '@mui/x-data-grid';
import { Card } from '@mui/material';

interface Vulnerability {
  cve: string;
  severity: string;
  packageName: string;
  packageVersion: string;
  published: string;
  fixDate: string;
}

interface VulnerabilityTableProps {
  vulnerabilities: Vulnerability[];
}

export function VulnerabilityTable({ vulnerabilities }: VulnerabilityTableProps) {
  const columns: GridColDef[] = [
    { field: 'cve', headerName: 'CVE ID', flex: 1, minWidth: 180 },
    { field: 'severity', headerName: 'Severity', flex: 0.5, minWidth: 100 },
    { field: 'packageName', headerName: 'Package', flex: 1, minWidth: 150 },
    { field: 'packageVersion', headerName: 'Version', flex: 0.5, minWidth: 100 },
    { field: 'published', headerName: 'Published Date', flex: 1, minWidth: 150 },
    { field: 'fixDate', headerName: 'Fix Date', flex: 1, minWidth: 150 },
  ];

  const rows = vulnerabilities.map((vuln, index) => ({
    id: index, // DataGrid requires unique id
    cve: vuln.cve || 'N/A',
    severity: vuln.severity || 'N/A',
    packageName: vuln.packageName || 'N/A',
    packageVersion: vuln.packageVersion || 'N/A',
    published: vuln.published || 'N/A',
    fixDate: vuln.fixDate || 'N/A',
  }));

  return (
    <Card style={{ padding: '20px', marginTop: '20px' }}>
      <div style={{ height: 600, width: '100%' }}>
        <DataGrid
          rows={rows}
          columns={columns}
          pageSizeOptions={[10, 20, 50]}
          initialState={{
            pagination: { paginationModel: { pageSize: 10, page: 0 } },
            sorting: {
              sortModel: [{ field: 'severity', sort: 'desc' }],
            },
          }}
          disableRowSelectionOnClick
          density="comfortable"
        />
      </div>
    </Card>
  );
}
